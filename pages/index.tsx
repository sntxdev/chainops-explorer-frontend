// @ts-nocheck
import type { NextPage } from "next";
import React, { useState, useEffect, useCallback } from "react";
import Head from "next/head";
import { WebSock, SidebarWithHeader } from "../components";
import styles from "../styles/Home.module.css";
import { Flex, Box, SimpleGrid, Center } from "@chakra-ui/react";
import useWebSocket, { ReadyState } from "react-use-websocket";

const Home: NextPage = () => {
  const handleClick = (e: any) => {
    // e.preventDefault()
    // ws.send('{}');
  };

  const [socketUrl, setSocketUrl] = useState(
    "ws://194.163.167.188:8000/archway"
  );
  const [messageHistory, setMessageHistory] = useState([]);
  const [txs, setTxs] = useState([]);
  const [blocks, setBlocks] = useState([]);
  const [lastBlock, setLastBlock] = useState(null);
  const [lastTxs, setLastTxs] = useState([]);
  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);

  useEffect(() => {
    if (lastMessage !== null) {
      const data = JSON.parse(lastMessage.data);

      // @ts-ignore
      setMessageHistory((prev) => prev.concat(lastMessage));

      if (data.hasOwnProperty("block")) {
        setBlocks((prev) => prev.concat(data.block));
        setLastBlock(data.block);
      }

      if (data.hasOwnProperty("transaction")) {
        setTxs((prev) => prev.concat(data.transaction));
        if (data.transaction.height == lastBlock.height) {
          // setLastTxs(data.transaction);
          setLastTxs((prev) => prev.concat(data.transaction));
        }
      }
    }
  }, [lastMessage, setMessageHistory]);

  const handleClickSendMessage = useCallback(() => sendMessage("{}"), []);
  // useEffect(() => console.log("Transactions: ", txs), [txs]);
  // useEffect(() => console.log(blocks), [blocks]);
  useEffect(() => console.log("Last Block:", lastBlock), [lastBlock]);
  useEffect(() => console.log("Last lastTxs:", lastTxs), [lastTxs]);

  const connectionStatus = {
    [ReadyState.CONNECTING]: "Connecting",
    [ReadyState.OPEN]: "Open",
    [ReadyState.CLOSING]: "Closing",
    [ReadyState.CLOSED]: "Closed",
    [ReadyState.UNINSTANTIATED]: "Uninstantiated",
  }[readyState];

  return (
    <div>
      <Head>
        <link
          href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap"
          rel="stylesheet"
        />

        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <SidebarWithHeader>
          <Flex wrap="wrap" justifyContent="space-between">
            <Box w="49%" height="390px" bg="white">
              1
            </Box>
            <Box height="390px" w="49%">
              <SimpleGrid
                columns={2}
                spacingX="40px"
                spacingY="20px"
                fontSize="24px"
                fontWeight="bold"
              >
                <Box
                  color="white"
                  bgGradient="linear(to-tr, #1BE3DC,  #9127E3, #E332BF)"
                  boxShadow="sm"
                  height="180px"
                  borderRadius="10"
                >
                  <Center height="100%">9 234</Center>
                </Box>
                <Box
                  bg="white"
                  boxShadow="md"
                  height="180px"
                  borderRadius="10"
                  _hover={{
                    color: "white",
                    bgGradient: "linear(to-tr, #1BE3DC,  #9127E3, #E332BF)",
                  }}
                >
                  <Center height="100%">324 954</Center>
                </Box>
                <Box
                  bg="white"
                  boxShadow="md"
                  height="180px"
                  borderRadius="10"
                  _hover={{
                    color: "white",
                    bgGradient: "linear(to-tr, #1BE3DC,  #9127E3, #E332BF)",
                  }}
                >
                  <Center height="100%">112 / 155</Center>
                </Box>
                <Box
                  bg="white"
                  boxShadow="md"
                  height="180px"
                  borderRadius="10"
                  _hover={{
                    color: "white",
                    bgGradient: "linear(to-tr, #1BE3DC,  #9127E3, #E332BF)",
                  }}
                >
                  <Center height="100%">1 248</Center>
                </Box>
              </SimpleGrid>
            </Box>
            <Box bg="white" height="40vh" w="49%">
              <Center height="100%">4</Center>
            </Box>
            <Box bg="white" height="40vh" w="49%">
              <Center height="100%">3</Center>
            </Box>
          </Flex>
        </SidebarWithHeader>
      </main>
    </div>
  );
};

export default Home;

// ws.on('open', function open() {
//   // ws.send('');
// });
//
// ws.on('message', function message(data) {
//   console.log('received: %s', data);
// });
