name: build
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: yarn install
        run: |
          yarn
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14.x ]
      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}
        - name: yarn install & test
          run: |
            yarn
            yarn test
          env:
            CI: true
build-and-deploy:
  runs-on: ubuntu-latest
  needs: test
  steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file Dockerfile --tag chainops-explorer-frontend --label "runnumber=${GITHUB_RUN_ID}"
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/nextjs-blog
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag nextjs-blog $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
